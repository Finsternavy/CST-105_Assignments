/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FinalProject.frontend;

import FinalProject.backend.PlayerManager;
import FinalProject.frontend.ViewPlayers.PlayerTypes;
import javax.swing.JPanel;

/**
 *
 * @author proto
 */
public class MainFrame extends javax.swing.JFrame {

    public static final MainFrame INSTANCE = new MainFrame();

    public static final DraftCompleted DRAFT_COMPLETED = new DraftCompleted();
    public static final SelectOptions SELECT_OPTIONS = new SelectOptions();    
    public static final PlayerManager PLAYER_MANAGER = new PlayerManager();
       
    private static final JPanel MAIN_PANEL = new JPanel();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.setVisible(false);
    }

    public enum ViewState {
        WELCOME,
        DRAFTBOARD,
        DRAFTEND,
        OPTIONS,
        VIEWPLAYERS
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 866, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            PLAYER_MANAGER.createPlayers();
            
            INSTANCE.setContentPane(MAIN_PANEL);
            INSTANCE.changeState(ViewState.WELCOME);
            INSTANCE.setVisible(true);
        });
    }

    public void changeState(ViewState state) {
        switch (state) {
            case WELCOME:
                this.changePanel(new WelcomeScreen());
                break;
            case DRAFTBOARD:
                this.changePanel(new DraftBoard());
                break;
            case DRAFTEND:
                this.changePanel(new DraftCompleted());
                break;
            case OPTIONS:
                this.changePanel(new SelectOptions());
                break;
            case VIEWPLAYERS:
            default:
                throw new AssertionError(state.name());

        }
    }
    
    public void changeStateToViewPlayers(PlayerTypes type) {
        ViewPlayers viewPlayers = new ViewPlayers(type);
        this.changePanel(viewPlayers);
    }

    private void changePanel(JPanel panel) {
        MAIN_PANEL.removeAll();
        MAIN_PANEL.add(panel);
        MAIN_PANEL.revalidate();
        MAIN_PANEL.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
